# 构建 VitePress 站点并将其部署到 GitHub Pages 的示例工作流程
#
name: Build Docker Image

on:
  # 在针对 `main` 分支的推送上运行。如果你
  # 使用 `master` 分支作为默认分支，请将其更改为 `master`
  push:
    branches:
      - main
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 获取完整的 Git 历史记录，包括标签

      - name: Get project name
        id: get_project_name
        run: |
          repo_name=${GITHUB_REPOSITORY##*/}
          echo "repo_name=$repo_name" >> $GITHUB_ENV

      - name: Get latest tag and Remove 'v' prefix from tag
        id: get_latest_tag
        run: |
          # 获取最新的标签（假设标签都是按字母顺序排序的，并且最新的标签排在最前面）
          latest_tag=$(git describe --tags --abbrev=0)
          echo "Latest tag: $latest_tag"
          # 去掉标签中的 "v" 前缀（如果存在）  
          latest_tag_without_v=$(echo "$latest_tag" | sed 's/^v//') 
          # 将处理后的标签设置为输出变量  
          echo "latest_tag_without_v=$latest_tag_without_v" >> $GITHUB_ENV

      - name: Build the Docker image
        run: |
          docker version
          # 登录阿里云镜像仓库
          docker login --username=${{ secrets.DOCKER_USERNAME }} --password=${{ secrets.DOCKER_PASSWORD }} registry.cn-hangzhou.aliyuncs.com
          # 使用Dockerfile构建镜像
          docker build . --file Dockerfile --tag registry.cn-hangzhou.aliyuncs.com/liaozhiming/${{ env.repo_name }}:${{ env.latest_tag_without_v }}
          # 推送镜像到镜像仓库
          docker push registry.cn-hangzhou.aliyuncs.com/liaozhiming/${{ env.repo_name }}:${{ env.latest_tag_without_v }}

